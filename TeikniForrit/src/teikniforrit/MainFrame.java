/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package teikniforrit;

import java.awt.*;
import javax.swing.*;
import java.awt.image.*;
import java.io.*;
import javax.imageio.*;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.NumberFormatter;

/**
 *
 * @author Bjarki_2
 */
public class MainFrame extends javax.swing.JFrame {
    
    //Byrjunarpunktur veljara (selector).
    private Point selectionStart; 
    //Segir hvort hakað sé við veljara.
    private boolean selectionActive;
    //Segir hvort hakað sé við bakgrunnsfyllingu.
    private boolean changeBackgroundActive;
    //Notað til að svissa á milli undo og redo.
    private boolean undoRedo = true;
    //Notað til að svissa stillingum af/á.
    private boolean detailedErrors = false;
    private boolean clearScreenOnOpen = true;
    private boolean resizeOpened = false;
    
    //Notað til að geyma tilbúna liti fyrir litatakka.
    private final Color[] colorButtons = 
    {Color.black,   Color.white,    Color.yellow,         Color.red,    
     Color.green,    Color.blue,    Color.gray,    Color.magenta,  
     Color.orange};  
    //Notað til að halda utan um pennastærðir mismunandi stöður músar.
    private final int[] penSizeBackups;
    //Notað til að halda utan um nöfn staða músar.
    private final String toolStrings[];
    //Notað til að halda utan um fasta fyrir stöður músar.
    private final int[] stateConstants;
    
    //Fastar:
    //Stöður penna í formi heiltalna til að velja um frjálsa teikningu
    //eða teikningu á ferningi, sporbaugi, þríhyrningi eða texta. 
    //Þær segja einnig til um hvar í fylkinu penSizeBackups þær eru.
    public final static int drawFree = 0;
    public final static int eraser = 1;
    public final static int drawRect = 2;
    public final static int drawCircle = 3;
    public final static int drawTriangle = 4;
    public final static int drawLine = 5;
    public final static int drawText = 6;
    //Fjöldi mismunandi staða penna.
    public final static int numberOfStates = 7;
    //Aukastöður penna:
    public final static int selectorConstant = 7;
    public final static int changeBackgroundConstant = 8;
    //Fjöldi mismunandi óbreytilegra litatakka.
    public final static int numberOfColorButtons = 9;
    //Stöðluð pennastærð.
    public final static int standardPenSize = 5;
    //Fasti sem notaður er til að jafna út stærðarhlutföll þess sem hægt er að teikna.
    public final static int standardPenConstant = 10;
    //Stærð skjás.
    public static final Dimension dimensionOfScreen = Toolkit.getDefaultToolkit().getScreenSize();
    //Mynd sem er í litavalstakka.
    private final BufferedImage colorSample;
    //Notað til að breyta pennastærðarsnúningshjóli.
    private final SpinnerNumberModel penSizeModel;

    //Smiður MainFrame sem er aðalviðmótið og heldur utan um allt.
    public MainFrame() {
        penSizeModel = new SpinnerNumberModel(standardPenSize,1,1000,1);
        initComponents();
        JFormattedTextField txt = ((JSpinner.NumberEditor) jSpinner1.getEditor()).getTextField();
        ((NumberFormatter) txt.getFormatter()).setAllowsInvalid(false);
        mainPanel1.setState(drawFree);
        colorSample = new BufferedImage(16,16,BufferedImage.TYPE_INT_RGB); 
        colorChooseButton.setIcon(new ImageIcon(colorSample));
        buttonIconInit();
        groupButtons();
        mainPanel1.setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
        stateConstants = new int[numberOfStates];
        for(int i = 0; i<numberOfStates; i++)
            stateConstants[i]=i;
        penSizeBackups = new int[numberOfStates];
        penSizeBackupInit();
        jButton18.setBackground(mainPanel1.getBackgroundColor());
        mainPanel1.setBrushBoolean(false);
        mainPanel1.shape.setBorderBoolean(true);
        mainPanel1.shape.setFillBoolean(true);
        selectionActive = false;
        changeBackgroundActive = false;
        toolStrings = new String[] {"pennatól", "strokleður", "ferhyrningstól", "sporbaugstól", "þríhyrningstól", "línutól", "textatól"};
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        colorChooseButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        coordinates = new javax.swing.JLabel();
        jLpenSize = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner(penSizeModel);
        jCB_brush = new javax.swing.JCheckBox();
        jCB_fill = new javax.swing.JCheckBox();
        jCB_border = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JToggleButton();
        jButton18 = new javax.swing.JToggleButton();
        output = new javax.swing.JLabel();
        mainPanel1 = new teikniforrit.MainPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemNew = new javax.swing.JMenuItem();
        jMenuItemOpen = new javax.swing.JMenuItem();
        jMenuItemSave = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuEdit = new javax.swing.JMenu();
        jMenuItemUndoRedo = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem4 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem5 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem6 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem7 = new javax.swing.JRadioButtonMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItemChangePenSize = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenu1 = new javax.swing.JMenu();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Teikniforrit");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setFocusable(false);
        jPanel1.setRequestFocusEnabled(false);
        jPanel1.setVerifyInputWhenFocusTarget(false);

        colorChooseButton.setMnemonic(86);
        colorChooseButton.setText("Velja lit: ");
        colorChooseButton.setToolTipText("Smelltu hér til að breyta lit þess tóls sem þú hefur valið. (Alt+v)");
        colorChooseButton.setAlignmentY(0.0F);
        colorChooseButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        colorChooseButton.setFocusable(false);
        colorChooseButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        colorChooseButton.setMaximumSize(new java.awt.Dimension(91, 23));
        colorChooseButton.setMinimumSize(new java.awt.Dimension(91, 23));
        colorChooseButton.setPreferredSize(new java.awt.Dimension(91, 23));
        colorChooseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorChooseButtonActionPerformed(evt);
            }
        });

        clearButton.setMnemonic(10);
        clearButton.setText("Hreinsa skjá");
        clearButton.setToolTipText("Smelltu hér til að byrja aftur á teikningunni. (Alt+enter)");
        clearButton.setAlignmentY(0.0F);
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.setFocusable(false);
        clearButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clearButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        coordinates.setText("Hnit: ");
        coordinates.setToolTipText("Hnit músar á teiknifletinum.");
        coordinates.setAlignmentY(0.0F);
        coordinates.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLpenSize.setText("Pennastærð:");

        Integer INT = (Integer) jSpinner1.getValue();
        int penSize_L = INT.intValue();
        mainPanel1.setPenSize(penSize_L);
        jSpinner1.setToolTipText("Smelltu á eða haltu inni örvartökkunum til að breyta pennastærð. Þú getur líka slegið tölu á bilinu 1-1000 inn í textareitinn og ýtt á Enter.");
        jSpinner1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jCB_brush.setMnemonic(66);
        jCB_brush.setText("Bursti:");
        jCB_brush.setToolTipText("Hakaðu við hér ef þú vilt breyta formi í bursta, sem þú beytir svo með músinni. (Alt+b)");
        jCB_brush.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jCB_brush.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jCB_brush.setPreferredSize(new java.awt.Dimension(59, 23));
        jCB_brush.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB_brushActionPerformed(evt);
            }
        });

        jCB_fill.setMnemonic(89);
        jCB_fill.setSelected(true);
        jCB_fill.setText("Fylling:");
        jCB_fill.setToolTipText("Hakaðu við hér ef þú vilt að form hafi litafyllingu. (Alt+y)");
        jCB_fill.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jCB_fill.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jCB_fill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB_fillActionPerformed(evt);
            }
        });

        jCB_border.setMnemonic(82);
        jCB_border.setSelected(true);
        jCB_border.setText("Rammi:");
        jCB_border.setToolTipText("Hakaðu við hér ef þú vilt að form sé með svartan ramma um sig. (Alt+r)");
        jCB_border.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jCB_border.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jCB_border.setPreferredSize(new java.awt.Dimension(59, 23));
        jCB_border.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB_borderActionPerformed(evt);
            }
        });

        jButton1.setMnemonic('1');
        jButton1.setToolTipText("Smelltu hér til að breyta lit þess tóls sem þú hefur valið.");
        jButton1.setAlignmentY(0.0F);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton1.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton1.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setMnemonic('2');
        jButton2.setToolTipText("Smelltu hér til að breyta lit þess tóls sem þú hefur valið.");
        jButton2.setAlignmentY(0.0F);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton2.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton2.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setMnemonic('3');
        jButton3.setToolTipText("Smelltu hér til að breyta lit þess tóls sem þú hefur valið.");
        jButton3.setAlignmentY(0.0F);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton3.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton3.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setMnemonic('4');
        jButton4.setToolTipText("Smelltu hér til að breyta lit þess tóls sem þú hefur valið.");
        jButton4.setAlignmentY(0.0F);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton4.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton4.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setMnemonic('5');
        jButton5.setToolTipText("Smelltu hér til að breyta lit þess tóls sem þú hefur valið.");
        jButton5.setAlignmentY(0.0F);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton5.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton5.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setMnemonic('6');
        jButton6.setToolTipText("Smelltu hér til að breyta lit þess tóls sem þú hefur valið.");
        jButton6.setAlignmentY(0.0F);
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton6.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton6.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setMnemonic('7');
        jButton7.setToolTipText("Smelltu hér til að breyta lit þess tóls sem þú hefur valið.");
        jButton7.setAlignmentY(0.0F);
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton7.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton7.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setMnemonic('8');
        jButton8.setToolTipText("Smelltu hér til að breyta lit þess tóls sem þú hefur valið.");
        jButton8.setAlignmentY(0.0F);
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton8.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton8.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setMnemonic('9');
        jButton9.setToolTipText("Smelltu hér til að breyta lit þess tóls sem þú hefur valið.");
        jButton9.setAlignmentY(0.0F);
        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton9.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton9.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton9.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/drawFree.png"))); // NOI18N
        jButton10.setToolTipText("Smelltu hér til að velja pennatól. (Ctrl+1)");
        jButton10.setAlignmentY(0.0F);
        jButton10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton10.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton10.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/eraser.png"))); // NOI18N
        jButton11.setToolTipText("Smelltu hér til að velja strokleður. (Ctrl+2)");
        jButton11.setAlignmentY(0.0F);
        jButton11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton11.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton11.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton11.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/drawRect.png"))); // NOI18N
        jButton12.setToolTipText("Smelltu hér til að velja ferhyrningstól. (Ctrl+3)");
        jButton12.setAlignmentY(0.0F);
        jButton12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton12.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton12.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton12.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/drawCircle.png"))); // NOI18N
        jButton13.setToolTipText("Smelltu hér til að velja sporbaugstól. (Ctrl+4)");
        jButton13.setAlignmentY(0.0F);
        jButton13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton13.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton13.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton13.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/drawTriangle.png"))); // NOI18N
        jButton14.setToolTipText("Smelltu hér til að velja þríhyrningstól. (Ctrl+5)");
        jButton14.setAlignmentY(0.0F);
        jButton14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton14.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton14.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton14.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/drawLine.png"))); // NOI18N
        jButton15.setToolTipText("Smelltu hér til að velja línutól. (Ctrl+6)");
        jButton15.setAlignmentY(0.0F);
        jButton15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton15.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton15.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton15.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/drawText.png"))); // NOI18N
        jButton16.setToolTipText("Smelltu hér til að velja textatól. (Ctrl+7)");
        jButton16.setAlignmentY(0.0F);
        jButton16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton16.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton16.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton16.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/selector.png"))); // NOI18N
        jButton17.setMnemonic('s');
        jButton17.setToolTipText("Smelltu hér til að velja á milli þess að draga lögun forms upp eða geta hreyft staðlaða lögun þess um. (Alt+s)");
        jButton17.setAlignmentY(0.0F);
        jButton17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton17.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton17.setMaximumSize(new java.awt.Dimension(23, 23));
        jButton17.setMinimumSize(new java.awt.Dimension(23, 23));
        jButton17.setOpaque(true);
        jButton17.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/changeBackground.png"))); // NOI18N
        jButton18.setMnemonic('D');
        jButton18.setToolTipText("Smelltu hér til að geta valið bakgrunnslit sem kemur þegar þú hreinsar skjáinn. (Alt+d)");
        jButton18.setAlignmentY(0.0F);
        jButton18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton18.setOpaque(true);
        jButton18.setPreferredSize(new java.awt.Dimension(23, 23));
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        output.setText("Þú ert með pennatól valið.");
        output.setToolTipText("Hér stendur hvaða tól er virkt á músinni þegar þú smellir á teikniflötinn til að teikna.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(coordinates, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLpenSize)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jCB_brush, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCB_border, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCB_fill)))
                        .addGap(4, 4, 4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(colorChooseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(colorChooseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clearButton)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1)
                        .addComponent(coordinates, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLpenSize)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCB_fill)
                            .addComponent(jCB_border, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCB_brush, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        mainPanel1.setPreferredSize(new java.awt.Dimension(403, 276));
        mainPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mainPanel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mainPanel1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mainPanel1MousePressed(evt);
            }
        });
        mainPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                mainPanel1MouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                mainPanel1MouseMoved(evt);
            }
        });

        javax.swing.GroupLayout mainPanel1Layout = new javax.swing.GroupLayout(mainPanel1);
        mainPanel1.setLayout(mainPanel1Layout);
        mainPanel1Layout.setHorizontalGroup(
            mainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        mainPanel1Layout.setVerticalGroup(
            mainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jMenuFile.setMnemonic('F');
        jMenuFile.setText("File");
        jMenuFile.setToolTipText("Skrá");
        jMenuFile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jMenuItemNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/new.png"))); // NOI18N
        jMenuItemNew.setText("New");
        jMenuItemNew.setToolTipText("Nýtt skjal, allt fer á frumstillingu.");
        jMenuItemNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItemNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNewActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemNew);

        jMenuItemOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/open.png"))); // NOI18N
        jMenuItemOpen.setText("Open");
        jMenuItemOpen.setToolTipText("Opna teikningu í forriti.");
        jMenuItemOpen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemOpen);

        jMenuItemSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/save.png"))); // NOI18N
        jMenuItemSave.setText("Save as");
        jMenuItemSave.setToolTipText("Vista teikningu á tölvu.");
        jMenuItemSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemSave);

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/exit.png"))); // NOI18N
        jMenuItemExit.setText("Exit");
        jMenuItemExit.setToolTipText("Slökkva á forriti.");
        jMenuItemExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExit);

        jMenuBar1.add(jMenuFile);

        jMenuEdit.setMnemonic('E');
        jMenuEdit.setText("Edit");
        jMenuEdit.setToolTipText("Breyta");
        jMenuEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jMenuItemUndoRedo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemUndoRedo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/undoRedo.png"))); // NOI18N
        jMenuItemUndoRedo.setText("Undo");
        jMenuItemUndoRedo.setToolTipText("Afturkalla síðustu teikningu á skjáinn.");
        jMenuItemUndoRedo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItemUndoRedo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUndoRedoActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItemUndoRedo);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setText("Hreinsa skjá");
        jMenuItem2.setToolTipText("Smelltu hér til að byrja aftur á teikningunni.");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItem2);

        jMenuBar1.add(jMenuEdit);

        jMenu2.setMnemonic('T');
        jMenu2.setText("Tools");
        jMenu2.setToolTipText("Tól");
        jMenu2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jRadioButtonMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.CTRL_MASK));
        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("Pennatól");
        jRadioButtonMenuItem1.setToolTipText("Smelltu hér til að velja pennatól.");
        jRadioButtonMenuItem1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButtonMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/drawFree.png"))); // NOI18N
        jRadioButtonMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jRadioButtonMenuItem1);

        jRadioButtonMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.CTRL_MASK));
        jRadioButtonMenuItem2.setText("Strokleður");
        jRadioButtonMenuItem2.setToolTipText("Smelltu hér til að velja strokleður.");
        jRadioButtonMenuItem2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButtonMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/eraser.png"))); // NOI18N
        jRadioButtonMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jRadioButtonMenuItem2);

        jRadioButtonMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, java.awt.event.InputEvent.CTRL_MASK));
        jRadioButtonMenuItem3.setText("Ferhyrningstól");
        jRadioButtonMenuItem3.setToolTipText("Smelltu hér til að velja ferhyrningstól.");
        jRadioButtonMenuItem3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButtonMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/drawRect.png"))); // NOI18N
        jRadioButtonMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jRadioButtonMenuItem3);

        jRadioButtonMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_4, java.awt.event.InputEvent.CTRL_MASK));
        jRadioButtonMenuItem4.setText("Sporbaugstól");
        jRadioButtonMenuItem4.setToolTipText("Smelltu hér til að velja sporbaugstól.");
        jRadioButtonMenuItem4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButtonMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/drawCircle.png"))); // NOI18N
        jRadioButtonMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jRadioButtonMenuItem4);

        jRadioButtonMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_5, java.awt.event.InputEvent.CTRL_MASK));
        jRadioButtonMenuItem5.setText("Þríhyrningstól");
        jRadioButtonMenuItem5.setToolTipText("Smelltu hér til að velja þríhyrningstól.");
        jRadioButtonMenuItem5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButtonMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/drawTriangle.png"))); // NOI18N
        jRadioButtonMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jRadioButtonMenuItem5);

        jRadioButtonMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_6, java.awt.event.InputEvent.CTRL_MASK));
        jRadioButtonMenuItem6.setText("Línutól");
        jRadioButtonMenuItem6.setToolTipText("Smelltu hér til að velja línutól.");
        jRadioButtonMenuItem6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButtonMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/drawLine.png"))); // NOI18N
        jRadioButtonMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jRadioButtonMenuItem6);

        jRadioButtonMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_7, java.awt.event.InputEvent.CTRL_MASK));
        jRadioButtonMenuItem7.setText("Textatól");
        jRadioButtonMenuItem7.setToolTipText("Smelltu hér til að velja textatól.");
        jRadioButtonMenuItem7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButtonMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/drawText.png"))); // NOI18N
        jRadioButtonMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jRadioButtonMenuItem7);
        jMenu2.add(jSeparator1);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setMnemonic('v');
        jMenuItem1.setText("Velja lit");
        jMenuItem1.setToolTipText("Smelltu hér til að breyta lit þess tóls sem þú hefur valið.");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItemChangePenSize.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemChangePenSize.setText("Breyta pennastærð");
        jMenuItemChangePenSize.setToolTipText("Smelltu hér til að breyta pennastærð.");
        jMenuItemChangePenSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemChangePenSizeActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemChangePenSize);
        jMenu2.add(jSeparator2);

        jMenu1.setMnemonic('P');
        jMenu1.setText("Preferences");
        jMenu1.setToolTipText("Hér getur þú stillt virkni forritsins eftir eigin smekk.");
        jMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("Clear screen when opening photo");
        jCheckBoxMenuItem2.setToolTipText("Smelltu hér til að velja hvort skjárinn hreinsist þegar mynd er opnuð.");
        jCheckBoxMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem2);

        jCheckBoxMenuItem1.setText("Resize opened photo");
        jCheckBoxMenuItem1.setToolTipText("Smelltu hér til að velja um hvort mynd stækkar/minnkar sjálfkrafa þegar hún er opnuð.");
        jCheckBoxMenuItem1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem1);

        jCheckBoxMenuItem3.setText("Detailed error messages");
        jCheckBoxMenuItem3.setToolTipText("Smelltu hér til að velja um hvort þú viljir sjá nákvæma lýsingu á ensku á villum sem geta komið upp.");
        jCheckBoxMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem3);

        jMenu2.add(jMenu1);

        jMenuBar1.add(jMenu2);

        jMenuHelp.setMnemonic('H');
        jMenuHelp.setText("Help");
        jMenuHelp.setToolTipText("Hjálp");
        jMenuHelp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jMenuItemAbout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teikniforrit/info.png"))); // NOI18N
        jMenuItemAbout.setText("About");
        jMenuItemAbout.setToolTipText("Um forrit.");
        jMenuItemAbout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuItemAbout);

        jMenuBar1.add(jMenuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mainPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Open, til að opna mynd af harða diskinum.
    private void jMenuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenActionPerformed
        openImage();
    }//GEN-LAST:event_jMenuItemOpenActionPerformed
   
    //Open hjálparfall, til að geta verið endurkvæmt.
    private void openImage(){
        JFileChooser ch;
        ch = new JFileChooser();
        FileFilter ff = new FileNameExtensionFilter("Image files", ImageIO.getReaderFileSuffixes());
        ch.setFileFilter(ff);
        int result = ch.showOpenDialog(mainPanel1);
        if (result==JFileChooser.APPROVE_OPTION ) {
            try {
                if(clearScreenOnOpen)
                    mainPanel1.clear();
                BufferedImage bi = ImageIO.read(getSelectedFileWithExtension(ch));
                if((resizeOpened)&&((bi.getWidth()>(int)dimensionOfScreen.getWidth()-1)||(bi.getHeight()>(int)dimensionOfScreen.getHeight()-1))){
                    mainPanel1.graphics2D.drawImage(bi, 1, 1, (int)dimensionOfScreen.getWidth()-1, (int)dimensionOfScreen.getHeight()-1, null);
                }
                else if((resizeOpened)&&((bi.getWidth()<(int)mainPanel1.getWidth())||(bi.getHeight()<(int)mainPanel1.getHeight())))
                    mainPanel1.graphics2D.drawImage(bi, 1, 1,(int)mainPanel1.getWidth()-1, (int)mainPanel1.getHeight()-1, null);
                else 
                    mainPanel1.graphics2D.drawImage(bi, 1, 1, bi.getWidth()-1, bi.getHeight()-1, null);
                if (mainPanel1!=null)
                    mainPanel1.invalidate();
            } catch (IOException e) {
                if(!detailedErrors)
                    openImage();
                else
                    showError(e);
            }
        }
    }
    
    //Villuskilaboð birt í dialog glugga fyrir notanda.
    private void showError(Throwable t) {
        JOptionPane.showMessageDialog(
            mainPanel1, 
            t.getMessage(), 
            t.toString(), 
            JOptionPane.ERROR_MESSAGE
        );
    }
    
    //Ný mynd, varað notanda við og gefið honum færi á að vista myndina sína.
    private void jMenuItemNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNewActionPerformed
        int result;
        if(!mainPanel1.savedPainting) {
            result = JOptionPane.showConfirmDialog(
                this, 
                "Viltu vista það sem þú ert kominn með?", 
                "Ný mynd", 
                JOptionPane.NO_OPTION, 
                JOptionPane.QUESTION_MESSAGE   
            );
            if(result==JOptionPane.NO_OPTION)
                newImage();
            if(result==JOptionPane.YES_OPTION){
                result = saveImage();
                if(result==JFileChooser.APPROVE_OPTION)
                    newImage();
            }
        }
        else 
            newImage();
    }//GEN-LAST:event_jMenuItemNewActionPerformed
    
    //Allt frumstillt í þá stöðu sem það er þegar kveikt er á forritinu.
    private void newImage(){
        this.undoRedo = true;
        mainPanel1.takeSnapshot();
        jMenuItemUndoRedo.setText("Undo");
        mainPanel1.setBackgroundColor(Color.WHITE);
        mainPanel1.clear();
        colorChooseButtonFix(Color.BLACK);
        mainPanel1.setBackgroundColor(Color.WHITE);
        jButton17.setSelected(false);
        jButton18.setSelected(false);
        jButton18.setBackground(mainPanel1.getBackgroundColor());
        mainPanel1.setState(drawFree);
        mainPanel1.setPenSize(standardPenSize);
        penSizeModel.setValue((Integer)standardPenSize);
        penSizeModel.setStepSize(1);
        penSizeBackupInit();
        mainPanel1.setBrushBoolean(false);
        jCB_brush.setSelected(false);
        mainPanel1.shape.setBorderBoolean(true);
        jCB_border.setSelected(true);
        mainPanel1.shape.setFillBoolean(true);
        jCB_fill.setSelected(true);
        mainPanel1.savedPainting = true;
        mainPanel1.startedPainting = false;
        selectionActive = false;
        changeBackgroundActive = false;
        jCheckBoxMenuItem1.setState(false);
        resizeOpened = false;
        jCheckBoxMenuItem2.setState(true);
        clearScreenOnOpen = true;
        detailedErrors = false;
        output.setText("Þú ert með " + toolStrings[mainPanel1.getState()] + " valið.");
    }
     
    //Save, athugað hvort búið sé að setja eitthvað á teikniflöt og ekki sé þegar búið að vista.
    private void jMenuItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveActionPerformed
        if(mainPanel1.startedPainting&&!mainPanel1.savedPainting)
            saveImage();
    }//GEN-LAST:event_jMenuItemSaveActionPerformed

    //Til að vista myndina á tölvuna.
    private int saveImage(){
        JFileChooser ch;
        ch = new JFileChooser();
        FileFilter ff = new FileNameExtensionFilter("Image files", ImageIO.getReaderFileSuffixes());
        ch.setFileFilter(ff);
        int result = ch.showSaveDialog(mainPanel1);
        if (result==JFileChooser.APPROVE_OPTION ) {
            try {
                File f;
                f = getSelectedFileWithExtension(ch);
                BufferedImage bi = new BufferedImage(
                        mainPanel1.getWidth(),
                        mainPanel1.getHeight(),
                        BufferedImage.TYPE_INT_ARGB
                );
                mainPanel1.paint(bi.getGraphics());
                ImageIO.write(bi, "png", f);
                mainPanel1.savedPainting = true;
                mainPanel1.startedPainting = false;
            } catch (IOException ioe) {
                if(!detailedErrors)
                    saveImage();
                else 
                    showError(ioe);
            }
        }
        return result;
    }
    
    //Ef notandi skrifar nafn á skrá þegar hann ætlar að vista en 
    //ekkert extension er til staðar, er það leiðrétt sjálfkrafa.
    private File getSelectedFileWithExtension(JFileChooser ch) throws IOException {
        File f = ch.getSelectedFile();
        if (ch.getFileFilter() instanceof FileNameExtensionFilter) {
            String[] exts = ((FileNameExtensionFilter)ch.getFileFilter()).getExtensions();
            String nameLower = f.getName().toLowerCase();
            for (String ext : exts) { 
            // I: Búið er að ganga úr skugga um að extension sé ekki þegar til staðar.
                if (nameLower.endsWith("." + ext.toLowerCase())) {
                    return f;
                }
            }
            //PNG er staðlað extension á myndum sem tengjast forritinu.
            f = new File(f.toString() + "." + "png");
        }
        return f;
    }
    
    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        exitProgram();
    }//GEN-LAST:event_jMenuItemExitActionPerformed
    
    //Exit, þegar reynt er að slökkva á forriti er notandi varaður við og gefinn kostur á að vista mynd.
    private void exitProgram(){
        int result;
        if(!mainPanel1.startedPainting){
            result = JOptionPane.showConfirmDialog(
                this, 
                "Ertu viss um að þú viljir hætta?", 
                "Hætta", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.QUESTION_MESSAGE   
            );
            if(result==JOptionPane.YES_OPTION)
                System.exit(0);
        }
        else if(!mainPanel1.savedPainting){
            result = JOptionPane.showConfirmDialog(
                this, 
                "Viltu vista það sem þú ert kominn með?", 
                "Hætta", 
                JOptionPane.YES_NO_CANCEL_OPTION, 
                JOptionPane.QUESTION_MESSAGE   
            );
            if(result==JOptionPane.NO_OPTION)
                System.exit(0);
            else if(result==JOptionPane.YES_OPTION){
                result = saveImage();
                if(result==JFileChooser.APPROVE_OPTION&&result!=JFileChooser.CANCEL_OPTION)
                    exitProgram();
            }
        }
    }
    
    //Mús hreyfð á teiknifleti. Hnit uppfærð.
    private void mainPanel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPanel1MouseMoved
        mainPanel1.reportPosition(evt);
        coordinates.setText(mainPanel1.coordinatesStr);   
    }//GEN-LAST:event_mainPanel1MouseMoved

    //Hliðrun á hnitum forma svo að músin haldi um miðjuna á þeim 
    //og þau fari ekki útfyrir teikniflötinn.
    public Point shapePosFix(){
        //Hnit.
        int x_L = mainPanel1.currentX;
        int y_L = mainPanel1.currentY;
        //Fastar.
        int const_L = mainPanel1.getPenSize()/2;
        int constX_L = mainPanel1.getSize().width-const_L-1;
        int constY_L = mainPanel1.getSize().height-const_L-1;
        //Boolean segðir.
        boolean bxmin = (x_L <= const_L+1);
        boolean bymin = (y_L <= const_L+1);
        boolean bxMAX = (x_L >= constX_L);
        boolean byMAX = (y_L >= constY_L);
        //Athugað hvort form fari útfyrir teikniflötinn.
        if(bxmin)
            x_L = const_L+1;
        if(bymin)
            y_L = const_L+1;
        if(bxMAX)
            x_L = constX_L;
        if(byMAX)
            y_L = constY_L;
        //Punktur með nýjum, hliðruðum músarhnitum.
        Point p = new Point(x_L,y_L);
        return p;
    }
    
    //Mús dregin á teiknifleti. Hnit uppfærð í samanburði, ný og gömul.
    //Brugðist við í sambæri við stöðu músar.
    private void mainPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPanel1MouseDragged
        if(mainPanel1.mouseOnDrawingArea){
            coordinates.setText(mainPanel1.coordinatesStr);
            Point p = evt.getPoint();
            mainPanel1.currentX = (int)p.getX();
            mainPanel1.currentY = (int)p.getY();
            int state_L = mainPanel1.getState();
            
            Point point = shapePosFix();
            int x_L = (int)point.getX();
            int y_L = (int)point.getY();
            
            if(state_L==drawFree)
                mainPanel1.drawFree();
            else if(state_L==drawLine)
                mainPanel1.drawLine(selectionStart,p);
            else if(state_L==eraser)
                mainPanel1.moveShape(x_L, y_L, state_L);
            
            if(!selectionActive){
                if(state_L==drawRect||state_L==drawCircle||state_L==drawTriangle)
                    mainPanel1.moveShape(x_L, y_L, state_L);
            }
            else{
                if(state_L==drawRect||state_L==drawCircle||state_L==drawTriangle)
                    mainPanel1.moveSizableShape(selectionStart, p, state_L);
            }

            mainPanel1.oldX = evt.getX();
            mainPanel1.oldY = evt.getY();

            mainPanel1.reportPosition(evt);
        }
    }//GEN-LAST:event_mainPanel1MouseDragged

    //Smellt á mús á teiknifleti. Ný músa- og veljarahnit sett. 
    //Afrit tekið af mynd til að afturkalla teikningu (undo).
    //Brugðist við í sambæri við stöðu músar.
    private void mainPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPanel1MousePressed
        mainPanel1.startedPainting = true;
        mainPanel1.savedPainting = false;
        selectionStart = evt.getPoint();
        jMenuItemUndoRedo.setText("Undo");
        this.undoRedo = true;
        mainPanel1.takeSnapshot();
        
        mainPanel1.oldX = mainPanel1.currentX = evt.getX();
        mainPanel1.oldY = mainPanel1.currentY = evt.getY();
        int state_L = mainPanel1.getState();
        
        Point point = shapePosFix();
        int x_L = (int)point.getX();
        int y_L = (int)point.getY();
        
        if(state_L==drawFree)
            mainPanel1.drawFree();
        else if(state_L==eraser)
            mainPanel1.placeShape(x_L, y_L,state_L);
        else if(state_L==drawText)
            mainPanel1.drawText(x_L, y_L);
        else if(state_L==drawLine)
            mainPanel1.drawLine(selectionStart,selectionStart);
        
        if(!selectionActive){
            if(state_L==drawRect||state_L==drawCircle||state_L==drawTriangle)
                mainPanel1.placeShape(x_L, y_L, state_L);
        }
        else{
            if(state_L==drawRect||state_L==drawCircle||state_L==drawTriangle)
                mainPanel1.graphics2D.drawLine((int)selectionStart.getX(), (int)selectionStart.getX(), (int)selectionStart.getX(), (int)selectionStart.getX());
        }
        
        mainPanel1.reportPosition(evt);
    }//GEN-LAST:event_mainPanel1MousePressed

    //Mynd fer af teiknifleti. Hnitastrengur uppfærður.
    private void mainPanel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPanel1MouseExited
        mainPanel1.mouseOnDrawingArea = false;
        mainPanel1.coordinatesStr = "";
        coordinates.setText("Hnit: ");
    }//GEN-LAST:event_mainPanel1MouseExited

    //Undo/Redo skipunin. Takkar uppfærðir.
    private void jMenuItemUndoRedoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUndoRedoActionPerformed
        mainPanel1.undoRedo();
        if(undoRedo){
            jMenuItemUndoRedo.setText("Redo");
            this.undoRedo = false;
        }
        else{
            jMenuItemUndoRedo.setText("Undo");
            this.undoRedo = true;
        }
    }//GEN-LAST:event_jMenuItemUndoRedoActionPerformed

    //Um forrit takkinn. Segir notanda grunnupplýsingar um forritið(til að koma honum af stað) og höfund þess.
    private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAboutActionPerformed
        JFrame frame = new JFrame();
        String s =
        "Höfundur: Bjarki Hall, 2014." + "\n" +
        "\n" +
        "Teikniforrit er forrit sem fólk getur notað til að teikna myndir með músinni." + "\n" +
        "Þú getur valið hvernig tól músin er, breytt litnum og stærðinni á því sem þú " + "\n" +
        "ætlar að teikna og hvort formin eigi að hafa ramma um sig og/eða fyllingu." + "\n" +
        "\n" +
        "Gangi þér vel!"
        ;
        JOptionPane.showMessageDialog(frame, s, "Um forrit", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItemAboutActionPerformed
       
    //Setur lit á litaakkana.
    public void buttonIconInit(){
        BufferedImage[] tempColor = new BufferedImage[numberOfColorButtons];
        for(int i = 0;i<numberOfColorButtons;i++){
            tempColor[i] = new BufferedImage(16,16,BufferedImage.TYPE_INT_RGB); 
            Graphics2D g = tempColor[i].createGraphics();
            g.setColor(colorButtons[i]);
            g.fillRect(0, 0, tempColor[i].getWidth(), tempColor[i].getHeight());
            g.setColor(Color.black);
            g.drawRect(0, 0, tempColor[i].getWidth()-1, tempColor[i].getHeight()-1);
            g.setColor(colorButtons[i]);
            g.dispose();
        }                     
                
        jButton1.setIcon(new ImageIcon(tempColor[0]));
        jButton2.setIcon(new ImageIcon(tempColor[1]));
        jButton3.setIcon(new ImageIcon(tempColor[2]));
        jButton4.setIcon(new ImageIcon(tempColor[3]));
        jButton5.setIcon(new ImageIcon(tempColor[4]));
        jButton6.setIcon(new ImageIcon(tempColor[5]));
        jButton7.setIcon(new ImageIcon(tempColor[6]));
        jButton8.setIcon(new ImageIcon(tempColor[7]));
        jButton9.setIcon(new ImageIcon(tempColor[8]));
    }
    
    //Setur réttan lit á litavalstakkann.
    public void colorChooseButtonFix(Color c) {
        BufferedImage bi = colorSample;
        mainPanel1.setColor(c);
        colorChooseButton.setIcon(new ImageIcon(colorSample));
        Graphics2D g = bi.createGraphics();
        g.setColor(mainPanel1.getColor());
        g.fillRect(0, 0, bi.getWidth(), bi.getHeight());
        g.setColor(Color.black);
        g.drawRect(0, 0, bi.getWidth()-1, bi.getHeight()-1);
        g.setColor(mainPanel1.getColor());
        g.dispose();
        
        if(changeBackgroundActive){
            mainPanel1.setBackgroundColor(mainPanel1.getColor());
            jButton18.setBackground(mainPanel1.getBackgroundColor());
            jButton18.setSelected(false);
            changeBackgroundActive = false;
        }
    }
    
    //Kemur í veg fyrir að notandi slekkur á forriti án þess að fá sérútbúið dialog.
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        exitProgram();
    }//GEN-LAST:event_formWindowClosing

    //Mús fer inn á teikniflöt. Hnit eru uppfærð.
    private void mainPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPanel1MouseEntered
        mainPanel1.mouseOnDrawingArea = true;
        mainPanel1.oldX = evt.getX();
        mainPanel1.oldY = evt.getY();
        mainPanel1.reportPosition(evt);
        coordinates.setText(mainPanel1.coordinatesStr);
    }//GEN-LAST:event_mainPanel1MouseEntered

    //Allir 9 tólatakkarnir hafa verið tengdir við buttonsOrganizer().
    //Allir 9 litatakkarnir hafa verið tengdir við colorChooseButtonFix().
    
    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        buttonsOrganizer(changeBackgroundConstant);
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        buttonsOrganizer(selectorConstant);
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        buttonsOrganizer(stateConstants[6]);
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        buttonsOrganizer(stateConstants[5]);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        buttonsOrganizer(stateConstants[4]);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        buttonsOrganizer(stateConstants[3]);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        buttonsOrganizer(stateConstants[2]);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        buttonsOrganizer(stateConstants[1]);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        buttonsOrganizer(stateConstants[0]);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        colorChooseButtonFix(colorButtons[8]);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        colorChooseButtonFix(colorButtons[7]);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        colorChooseButtonFix(colorButtons[6]);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        colorChooseButtonFix(colorButtons[5]);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        colorChooseButtonFix(colorButtons[4]);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        colorChooseButtonFix(colorButtons[3]);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        colorChooseButtonFix(colorButtons[2]);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        colorChooseButtonFix(colorButtons[1]);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        colorChooseButtonFix(colorButtons[0]);
    }//GEN-LAST:event_jButton1ActionPerformed

    //Radio-Tólatakkarnir í Tools eru tengdir saman.
    private void groupButtons(){
        ButtonGroup bg1 = new ButtonGroup();
        bg1.add(jRadioButtonMenuItem1);
        bg1.add(jRadioButtonMenuItem2);
        bg1.add(jRadioButtonMenuItem3);
        bg1.add(jRadioButtonMenuItem4);
        bg1.add(jRadioButtonMenuItem5);
        bg1.add(jRadioButtonMenuItem6);
        bg1.add(jRadioButtonMenuItem7);
    }
    
    //Bursti, Rammi og Fylling stillingarnar eru settar á, teknar af.
    
    private void jCB_borderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB_borderActionPerformed
        if(mainPanel1.shape.getBorderBoolean())
        mainPanel1.shape.setBorderBoolean(false);
        else
        mainPanel1.shape.setBorderBoolean(true);
    }//GEN-LAST:event_jCB_borderActionPerformed

    private void jCB_fillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB_fillActionPerformed
        if(mainPanel1.shape.getFillBoolean())
        mainPanel1.shape.setFillBoolean(false);
        else
        mainPanel1.shape.setFillBoolean(true);
    }//GEN-LAST:event_jCB_fillActionPerformed

    private void jCB_brushActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB_brushActionPerformed
        if(mainPanel1.getBrushBoolean())
        mainPanel1.setBrushBoolean(false);
        else
        mainPanel1.setBrushBoolean(true);
    }//GEN-LAST:event_jCB_brushActionPerformed

    //Gildi snuninghjóls er uppfært sem og pennastærð.
    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        Integer INT = (Integer) jSpinner1.getValue();
        int penSize_L = INT.intValue();
        mainPanel1.setPenSize(penSize_L);
        int state_L = mainPanel1.getState();
        penSizeBackup(state_L);
    }//GEN-LAST:event_jSpinner1StateChanged

    //Hreinsi- og Litavalstakki tengdir við aðgerðir.
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        clearScreenMenu();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void colorChooseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorChooseButtonActionPerformed
        changeColorMenu();
    }//GEN-LAST:event_colorChooseButtonActionPerformed

    //Aðgerðir hreinsitakka. Takið afrit af mynd og skjár hreinsaður.    
    private void clearScreenMenu(){
        mainPanel1.takeSnapshot();
        jButton18.setSelected(false);
        mainPanel1.clear();
        changeBackgroundActive = false;
    }
    
    //Aðgerð litavalstakka. JColorChooser gluggi fenginn upp.
    private void changeColorMenu(){
        Color initialBackground = colorChooseButton.getBackground();
        Color c = JColorChooser.showDialog(null,"Veldu lit",initialBackground);
        if (c != null)
        colorChooseButtonFix(c);
    }
    
    //Aðrir menu-takkar tengdir við sínar aðgerðir eða boolean gildum þeirra breytt.
    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        resizeOpened = !resizeOpened;
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jRadioButtonMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem1ActionPerformed
        buttonsOrganizer(stateConstants[0]);
    }//GEN-LAST:event_jRadioButtonMenuItem1ActionPerformed

    private void jRadioButtonMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem2ActionPerformed
        buttonsOrganizer(stateConstants[1]);
    }//GEN-LAST:event_jRadioButtonMenuItem2ActionPerformed

    private void jRadioButtonMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem3ActionPerformed
        buttonsOrganizer(stateConstants[2]);
    }//GEN-LAST:event_jRadioButtonMenuItem3ActionPerformed

    private void jRadioButtonMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem4ActionPerformed
        buttonsOrganizer(stateConstants[3]);
    }//GEN-LAST:event_jRadioButtonMenuItem4ActionPerformed

    private void jRadioButtonMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem5ActionPerformed
        buttonsOrganizer(stateConstants[4]);
    }//GEN-LAST:event_jRadioButtonMenuItem5ActionPerformed

    private void jRadioButtonMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem6ActionPerformed
        buttonsOrganizer(stateConstants[5]);
    }//GEN-LAST:event_jRadioButtonMenuItem6ActionPerformed

    private void jRadioButtonMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem7ActionPerformed
        buttonsOrganizer(stateConstants[6]);
    }//GEN-LAST:event_jRadioButtonMenuItem7ActionPerformed

    private void jCheckBoxMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ActionPerformed
        clearScreenOnOpen = !clearScreenOnOpen;
    }//GEN-LAST:event_jCheckBoxMenuItem2ActionPerformed

    private void jMenuItemChangePenSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemChangePenSizeActionPerformed
        changePenSizeMenu();
    }//GEN-LAST:event_jMenuItemChangePenSizeActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        changeColorMenu();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        clearScreenMenu();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jCheckBoxMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem3ActionPerformed
         detailedErrors = !detailedErrors;
    }//GEN-LAST:event_jCheckBoxMenuItem3ActionPerformed

    //Dialog sem biður um pennastærð og hættir ekki fyrr en hann fær löglegt 
    //gildi eða ýtt er á cancel. Pennastærð er breytt í sambæri við inntak.
    private void changePenSizeMenu(){
            int penSize_L;
        String input_L = JOptionPane.showInputDialog(null, 
        "Skrifaðu pennastærð á bilinu 1-1000 og smelltu á OK.\nÝttu á Cancel til að hætta við.", 
        "Breyta pennastærð", 
        JOptionPane.INFORMATION_MESSAGE);

        if (input_L == null||input_L.equalsIgnoreCase("")) {
            //Smellt á Cancel eða/og ekkert inntak.
        } else {
            try {
                penSize_L = Integer.parseInt(input_L);
                if (penSize_L < 1||penSize_L>1000) {
                    changePenSizeMenu();
                } else {
                    penSize_L = Integer.parseInt(input_L);
                    mainPanel1.setPenSize(penSize_L);
                    int state_L = mainPanel1.getState();
                    penSizeBackup(state_L);
                }
            } catch (NumberFormatException nfe) {
                //Ólöglegt inntak.
                if(!detailedErrors)
                    changePenSizeMenu();
                else
                    showError(nfe);
            }
        }
    }
    
    //Frumstillir penSizeBackups
    private void penSizeBackupInit(){
        for(int i = 0; i<numberOfStates; i++){
            //I: Búið er að setja staðlaða pennastærð á öll sæti í penSizeBackups.
            penSizeBackups[i] = standardPenSize;
        }
        penSizeBackups[eraser] = penSizeBackups[eraser]*standardPenConstant;
        penSizeBackups[drawRect] = penSizeBackups[drawRect]*standardPenConstant;
        penSizeBackups[drawCircle] = penSizeBackups[drawCircle]*standardPenConstant;
        penSizeBackups[drawTriangle] = penSizeBackups[drawTriangle]*standardPenConstant;
        penSizeBackups[drawText] = penSizeBackups[drawText]+standardPenConstant;
    }
    
    //Takkar safnast hér saman og eru tengdir við sínar aðferðir.
    private void buttonsOrganizer(int state_L){
        if(state_L<numberOfStates)
            penSizeBackup(state_L);
        if(state_L==selectorConstant)
            selectionActive = !selectionActive;
        if(state_L==changeBackgroundConstant)
            changeBackgroundActive = !changeBackgroundActive;
        output.setText("Þú ert með " + toolStrings[mainPanel1.getState()] + " valið.");
        
        //Radio takkar stilltir eftir stöðu músar.
        if(state_L==0)
            jRadioButtonMenuItem1.setSelected(true);
        if(state_L==1)
            jRadioButtonMenuItem2.setSelected(true);
        if(state_L==2)
            jRadioButtonMenuItem3.setSelected(true);
        if(state_L==3)
            jRadioButtonMenuItem4.setSelected(true);
        if(state_L==4)
            jRadioButtonMenuItem5.setSelected(true);
        if(state_L==5)
            jRadioButtonMenuItem6.setSelected(true);        
        if(state_L==6)
            jRadioButtonMenuItem7.setSelected(true);
    }
    
    //Tekur afrit af pennastærðum og stillir stöðu. _L stendur fyrir staðværa breytu.
    //Form hafa alltaf sömu pennastærð.
    private void penSizeBackup(int state_L){
        
        penSizeBackups[mainPanel1.getState()] = mainPanel1.getPenSize();
        mainPanel1.setState(state_L);
        
        mainPanel1.setPenSize(penSizeBackups[state_L]);
        penSizeModel.setValue(((Integer)mainPanel1.getPenSize()));
        
        if(state_L==eraser)
            penSizeBackups[drawTriangle] = penSizeBackups[drawCircle] = penSizeBackups[drawRect] = penSizeBackups[eraser];
        else if(state_L==drawRect){
            penSizeBackups[eraser] = penSizeBackups[drawTriangle] = penSizeBackups[drawCircle] = penSizeBackups[drawRect];
        }
        else if(state_L==drawCircle){
            penSizeBackups[drawRect] = penSizeBackups[eraser] = penSizeBackups[drawTriangle] = penSizeBackups[drawCircle];
        }
        else if(state_L==drawTriangle){
            penSizeBackups[eraser] = penSizeBackups[drawCircle] = penSizeBackups[drawRect] = penSizeBackups[drawTriangle];
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JButton colorChooseButton;
    private javax.swing.JLabel coordinates;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JToggleButton jButton17;
    private javax.swing.JToggleButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCB_border;
    private javax.swing.JCheckBox jCB_brush;
    private javax.swing.JCheckBox jCB_fill;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JLabel jLpenSize;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuEdit;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemChangePenSize;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemNew;
    private javax.swing.JMenuItem jMenuItemOpen;
    private javax.swing.JMenuItem jMenuItemSave;
    private javax.swing.JMenuItem jMenuItemUndoRedo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem3;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem4;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem5;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem6;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem7;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JSpinner jSpinner1;
    private teikniforrit.MainPanel mainPanel1;
    private javax.swing.JLabel output;
    // End of variables declaration//GEN-END:variables
}
